filter export_peer_cloudflare_v6
{
  if net_len_too_long() then reject;
  if is_martian_v6()  then reject;
  if is_default_v6()  then reject;
  if is_self_net_v6() then accept;
  if (202888, 3, 65001) ~ bgp_large_community then accept;
  if (202888, 3, 65002) ~ bgp_large_community then reject;
  if (202888, 3, 65003) ~ bgp_large_community then reject;
  #bgp_path.prepend(210320);
  reject;
}
filter import_peer_cloudflare_v6
{
  if net_len_too_long() then reject;
  if is_martian_v6()  then reject;
  if is_my_asn()   then reject;
  if is_self_net_v6() then reject;
  if is_default_v6()  then reject;
  bgp_large_community.add((202888,3,65002));
  bgp_local_pref = 500;
  accept;
}

protocol bgp peer_cloudflare_v6_1 {
  local as       202888;
  neighbor       2001:7f8:13::a501:3335:1 as 13335;
  source address 2001:7f8:13::a520:2888:1;
  ipv6 {
    export filter         export_peer_cloudflare_v6;
    import filter         import_peer_cloudflare_v6;
};
graceful restart on;
multihop;
}
protocol bgp peer_cloudflare_v6_2 {
  local as       202888;
  neighbor       2001:7f8:13::a501:3335:2 as 13335;
  source address 2001:7f8:13::a520:2888:1;
  ipv6 {
    export filter         export_peer_cloudflare_v6;
    import filter         import_peer_cloudflare_v6;
};
graceful restart on;
multihop;
}
protocol bgp peer_cloudflare_v6_3 {
  local as       202888;
  neighbor       2001:7f8:13::a501:3335:3 as 13335;
  source address 2001:7f8:13::a520:2888:1;
  ipv6 {
    export filter         export_peer_cloudflare_v6;
    import filter         import_peer_cloudflare_v6;
};
graceful restart on;
multihop;
}

filter export_peer_cloudflare_v4
{
  if net_len_too_long() then reject;
  if is_martian()  then reject;
  if is_default()  then reject;
  if is_self_net() then accept;
  if (202888, 3, 65001) ~ bgp_large_community then accept;
  if (202888, 3, 65002) ~ bgp_large_community then reject;
  if (202888, 3, 65003) ~ bgp_large_community then reject;
  #bgp_path.prepend(210320);
  reject;
}
filter import_peer_cloudflare_v4
{
  if is_martian()  then reject;
  if is_my_asn()   then reject;
  if is_self_net() then reject;
  if is_default()  then reject;
  bgp_large_community.add((202888,3,65002));
  bgp_local_pref = 500;
  accept;
}

protocol bgp peer_cloudflare_v4_1 {
  local as       202888;
  neighbor       193.239.118.138 as 13335;
  source address 193.239.116.160;
  ipv4 {
    export filter         export_peer_cloudflare_v4;
    import filter         import_peer_cloudflare_v4;
};
graceful restart on;
multihop;
}
protocol bgp peer_cloudflare_v4_2 {
  local as       202888;
  neighbor       193.239.117.14 as 13335;
  source address 193.239.116.160;
  ipv4 {
    export filter         export_peer_cloudflare_v4;
    import filter         import_peer_cloudflare_v4;
};
graceful restart on;
multihop;
}
protocol bgp peer_cloudflare_v4_3 {
  local as       202888;
  neighbor       193.239.117.114 as 13335;
  source address 193.239.116.160;
  ipv4 {
    export filter         export_peer_cloudflare_v4;
    import filter         import_peer_cloudflare_v4;
};
graceful restart on;
multihop;
}
