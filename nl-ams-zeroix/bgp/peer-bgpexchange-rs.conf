filter export_peer_bgp_exchange_rs_v6
{
  if net_len_too_long() then reject;
  if is_martian_v6()  then reject;
  if is_default_v6()  then reject;
  if (202888, 3, 65001) ~ bgp_large_community then accept;
  if (202888, 3, 65002) ~ bgp_large_community then reject;
  if (202888, 3, 65003) ~ bgp_large_community then reject;
  if is_self_net_v6() then accept;
  #bgp_path.prepend(210320);
  reject;
}
filter import_peer_bgp_exchange_rs_v6
{
  if is_martian_v6()  then reject;
  if is_my_asn()   then reject;
  if is_self_net_v6() then reject;
  if is_default_v6()  then reject;
  bgp_large_community.add((202888,3,65002));
  bgp_local_pref = 500;
  accept;
}

protocol bgp peer_bgp_exchange_rs_v6 {
  local as       202888;
  neighbor       2a0e:8f01:1000:11::1 as 24381;
  source address 2a0e:8f01:1000:11::12e;
  ipv6 {
    export filter         export_peer_bgp_exchange_rs_v6;
    import filter         import_peer_bgp_exchange_rs_v6;
};
graceful restart on;
multihop;
}

filter export_peer_bgp_exchange_rs_v4
{
  if net_len_too_long() then reject;
  if is_martian()  then reject;
  if is_default()  then reject;
  if (202888, 3, 65001) ~ bgp_large_community then accept;
  if (202888, 3, 65002) ~ bgp_large_community then reject;
  if (202888, 3, 65003) ~ bgp_large_community then reject;
  if (202888, 3, 65004) ~ bgp_large_community then reject;
  if is_self_net() then accept;
  #bgp_path.prepend(210320);
  reject;
}
filter import_peer_bgp_exchange_rs_v4
{
  if is_martian()  then reject;
  if is_my_asn()   then reject;
  if is_self_net() then reject;
  if is_default()  then reject;
  bgp_large_community.add((202888,3,65002));
  bgp_local_pref = 500;
  accept;
}

protocol bgp peer_bgp_exchange_rs_v4 {
  local as       202888;
  neighbor       100.66.43.254 as 24381;
  source address 100.66.41.46;
  ipv4 {
    export filter         export_peer_bgp_exchange_rs_v4;
    import filter         import_peer_bgp_exchange_rs_v4;
};
graceful restart on;
multihop;
}
