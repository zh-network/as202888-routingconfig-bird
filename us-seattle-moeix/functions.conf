function net_len_too_long(){
    case net.type {
        NET_IP4: return net.len > 24; # IPv4 CIDR 大于 /24 为太长
        NET_IP6: return net.len > 48; # IPv6 CIDR 大于 /48 为太长
        else: print "net_len_too_long: unexpected net.type ", net.type, " ", net; return false;
    }
}

function is_default()    { return net ~ [ 0.0.0.0/0 ]; }
function is_default_v6() { return net ~ [ ::/0      ]; }

function is_martian(){
  return net ~ [ 169.254.0.0/16+, 172.16.0.0/12+, 192.168.0.0/16+, 10.0.0.0/8+, 224.0.0.0/4+, 240.0.0.0/4+, 193.254.225.0/24];
}

function is_martian_v6(){
  return net ~ [ ::/96, ::/128, ::1/128, ::ffff:0.0.0.0/96+, ::224.0.0.0/100+, ::127.0.0.0/104+,                                     
                 ::0.0.0.0/104+, ::255.0.0.0/104+, 0000::/8+, 0200::/7+, 3ffe::/16+, 2001:db8::/32+,
                 2002:e000::/20+, 2002:7f00::/24+, 2002:0000::/24+, 2002:ff00::/24+, 2002:0a00::/24+,
                 2002:ac10::/28+, 2002:c0a8::/32+, fc00::/7+, fe80::/10+, fec0::/10+, ff00::/8+ ];
}

function is_self_net()    { return net ~ OWNNETSET ; }
function is_self_net_v6() { return net ~ OWNNETSETv6 ; }
function is_my_asn()      { return bgp_path.last ~ [ 202888 ]; }
