filter export_up_20473_v6
{
  if net_len_too_long() then reject;
  if is_martian_v6()  then reject;
  if is_default_v6()  then reject;
  if (202888, 10, 65001) ~ bgp_large_community then accept;
  if (202888, 10, 65002) ~ bgp_large_community then reject;
  if (202888, 10, 65003) ~ bgp_large_community then reject;
  if is_self_net_v6() then accept;
  #bgp_path.prepend(210320);
  reject;
}
filter import_up_20473_v6
{
  if is_martian_v6()  then reject;
  if net_len_too_long() then reject;
  if is_my_asn()      then reject;
  if is_self_net_v6() then reject;
  bgp_large_community.add((202888,10,65003));
  bgp_local_pref = 300;
  accept;
}

protocol bgp up_20473_v6 {
  local as       202888;
  neighbor       2001:19f0:ffff::1 as 64515;
  source address 2001:19f0:7001:5556:5400:04ff:fe64:4361;
  ipv6 {
    export filter     export_up_20473_v6;
    import filter     import_up_20473_v6;
  };
  graceful restart on;
  password "v2UdkbNLoaqo6xsZ";
  multihop 25;
}

filter export_up_20473_v4
{
  if net_len_too_long() then reject;
  if is_martian()  then reject;
  if is_default()  then reject;
  #if net ~ [174.136.238.0/24] then bgp_large_community.add ((65005:6939));
  if is_self_net() then accept;
  if (202888, 10, 65001) ~ bgp_large_community then accept;
  if (202888, 10, 65002) ~ bgp_large_community then reject;
  if (202888, 10, 65003) ~ bgp_large_community then reject;
  reject;
}
filter import_up_20473_v4
{
  if is_martian()  then reject;
  if is_my_asn()   then reject;
  if is_self_net() then reject;
  if is_default()  then reject;
  bgp_large_community.add((202888,10,65003));
  bgp_local_pref = 300;
  accept;
}

protocol bgp up_20473_v4 {
  local as       202888;
  neighbor       169.254.169.254 as 64515;
  source address 167.179.70.186;
  ipv4 {
    export filter	  export_up_20473_v4;
    import filter	  import_up_20473_v4;
};
graceful restart on;
password "v2UdkbNLoaqo6xsZ";
multihop 25;
}